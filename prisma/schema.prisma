generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String
  password    String
  isSuperuser Boolean   @default(false)
  accountType String
  fullname    String
  isActive    Boolean   @default(false)
  phone       String
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  deletedAt   DateTime?
}

model ProviderProfile {
  id        Int       @id @default(autoincrement())
  name      String
  image     String?
  isActive  Boolean   @default(false)
  userId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?
}

model Product {
  id             Int       @id @default(autoincrement())
  name           String
  compound       String
  temperature    String
  isActive       Boolean   @default(true)
  price          Float
  image          String?
  isNew          Boolean   @default(true)
  expirationDate String
  categoryId     Int
  providerId     Int
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now())
  deletedAt      DateTime?
}

model Branch {
  id            Int       @id @default(autoincrement())
  name          String
  address       String
  contactPerson String
  contactPhone  String
  isActive      Boolean   @default(false)
  isVerified    Boolean   @default(false)
  openTime	    String
  closeTime	    String
  userId        Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
}

model CafeOwnerUser {
  id          Int    @id @default(autoincrement())
  companyName String
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  deletedAt   DateTime?
}