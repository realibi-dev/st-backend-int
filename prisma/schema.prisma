generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String
  password    String
  isSuperuser Boolean   @default(false)
  accountType String
  fullname    String
  isActive    Boolean   @default(false)
  phone       String
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  deletedAt   DateTime?
}

model ProviderProfile {
  id        Int       @id @default(autoincrement())
  name      String
  image     String?
  isActive  Boolean   @default(false)
  userId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  deletedAt DateTime?
}

model SubCategory {
  id          Int       @id @default(autoincrement())
  name        String
  image       String?
  categoryId  Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  deletedAt   DateTime?
}

model Product {
  id                Int       @id @default(autoincrement())
  name              String
  compound          String
  temperature       String
  isActive          Boolean   @default(true)
  price             Float
  oldPrice          Float?
  image             String?
  isNew             Boolean   @default(true)
  expirationDate    String
  rating            Float     @default(5)
  reviewsCount      Int       @default(0)
  orderCoefficient  Float     @default(0)
  subCategoryId     Int?
  providerId        Int
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @default(now())
  deletedAt         DateTime?
}

model Branch {
  id            Int       @id @default(autoincrement())
  name          String
  address       String
  contactPerson String
  contactPhone  String
  isActive      Boolean   @default(false)
  isVerified    Boolean   @default(false)
  openTime	    String
  closeTime	    String
  userId        Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
}

model CafeOwnerUser {
  id          Int       @id @default(autoincrement())
  companyName String
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  deletedAt   DateTime?
}

model Cart {
  id          Int       @id @default(autoincrement())
  userId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  deletedAt   DateTime?
}

model CartItem {
  id          Int       @id @default(autoincrement())
  cartId      Int
  productId   Int
  quantity    Int
  price       Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  deletedAt   DateTime?
}

model Order {
  id            Int       @id @default(autoincrement())
  orderNumber   String
  totalPrice    Float
  deliveryPrice Float     @default(0)
  isCompleted   Boolean   @default(false)
  userId        Int
  branchId      Int
  isPaid        Boolean   @default(false)
  status        String    @default("main")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
}

model OrderItem {
  id            Int       @id @default(autoincrement())
  productId     Int
  orderId       Int
  price         Float
  status        String    @default("main")
  quantity      Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
}

model ProductNewPrice {
  id            Int       @id @default(autoincrement())
  userId        Int
  productId     Int
  price         Float
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
}

model ProductReview {
  id            Int       @id @default(autoincrement())
  userId        Int
  orderId       Int
  productId     Int
  rating        Int
  comment       String    @default("")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now())
  deletedAt     DateTime?
}
